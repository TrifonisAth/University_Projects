$comment
	File created using the following command:
		vcd file ALU16.msim.vcd -direction
$end
$date
	Sun Jun 05 21:01:47 2022
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	1ps
$end

$scope module alu16_vhd_vec_tst $end
$var wire 1 ! a [15] $end
$var wire 1 " a [14] $end
$var wire 1 # a [13] $end
$var wire 1 $ a [12] $end
$var wire 1 % a [11] $end
$var wire 1 & a [10] $end
$var wire 1 ' a [9] $end
$var wire 1 ( a [8] $end
$var wire 1 ) a [7] $end
$var wire 1 * a [6] $end
$var wire 1 + a [5] $end
$var wire 1 , a [4] $end
$var wire 1 - a [3] $end
$var wire 1 . a [2] $end
$var wire 1 / a [1] $end
$var wire 1 0 a [0] $end
$var wire 1 1 b [15] $end
$var wire 1 2 b [14] $end
$var wire 1 3 b [13] $end
$var wire 1 4 b [12] $end
$var wire 1 5 b [11] $end
$var wire 1 6 b [10] $end
$var wire 1 7 b [9] $end
$var wire 1 8 b [8] $end
$var wire 1 9 b [7] $end
$var wire 1 : b [6] $end
$var wire 1 ; b [5] $end
$var wire 1 < b [4] $end
$var wire 1 = b [3] $end
$var wire 1 > b [2] $end
$var wire 1 ? b [1] $end
$var wire 1 @ b [0] $end
$var wire 1 A opcode [2] $end
$var wire 1 B opcode [1] $end
$var wire 1 C opcode [0] $end
$var wire 1 D overflow $end
$var wire 1 E result [15] $end
$var wire 1 F result [14] $end
$var wire 1 G result [13] $end
$var wire 1 H result [12] $end
$var wire 1 I result [11] $end
$var wire 1 J result [10] $end
$var wire 1 K result [9] $end
$var wire 1 L result [8] $end
$var wire 1 M result [7] $end
$var wire 1 N result [6] $end
$var wire 1 O result [5] $end
$var wire 1 P result [4] $end
$var wire 1 Q result [3] $end
$var wire 1 R result [2] $end
$var wire 1 S result [1] $end
$var wire 1 T result [0] $end

$scope module i1 $end
$var wire 1 U gnd $end
$var wire 1 V vcc $end
$var wire 1 W unknown $end
$var wire 1 X devoe $end
$var wire 1 Y devclrn $end
$var wire 1 Z devpor $end
$var wire 1 [ ww_devoe $end
$var wire 1 \ ww_devclrn $end
$var wire 1 ] ww_devpor $end
$var wire 1 ^ ww_a [15] $end
$var wire 1 _ ww_a [14] $end
$var wire 1 ` ww_a [13] $end
$var wire 1 a ww_a [12] $end
$var wire 1 b ww_a [11] $end
$var wire 1 c ww_a [10] $end
$var wire 1 d ww_a [9] $end
$var wire 1 e ww_a [8] $end
$var wire 1 f ww_a [7] $end
$var wire 1 g ww_a [6] $end
$var wire 1 h ww_a [5] $end
$var wire 1 i ww_a [4] $end
$var wire 1 j ww_a [3] $end
$var wire 1 k ww_a [2] $end
$var wire 1 l ww_a [1] $end
$var wire 1 m ww_a [0] $end
$var wire 1 n ww_b [15] $end
$var wire 1 o ww_b [14] $end
$var wire 1 p ww_b [13] $end
$var wire 1 q ww_b [12] $end
$var wire 1 r ww_b [11] $end
$var wire 1 s ww_b [10] $end
$var wire 1 t ww_b [9] $end
$var wire 1 u ww_b [8] $end
$var wire 1 v ww_b [7] $end
$var wire 1 w ww_b [6] $end
$var wire 1 x ww_b [5] $end
$var wire 1 y ww_b [4] $end
$var wire 1 z ww_b [3] $end
$var wire 1 { ww_b [2] $end
$var wire 1 | ww_b [1] $end
$var wire 1 } ww_b [0] $end
$var wire 1 ~ ww_opcode [2] $end
$var wire 1 !! ww_opcode [1] $end
$var wire 1 "! ww_opcode [0] $end
$var wire 1 #! ww_result [15] $end
$var wire 1 $! ww_result [14] $end
$var wire 1 %! ww_result [13] $end
$var wire 1 &! ww_result [12] $end
$var wire 1 '! ww_result [11] $end
$var wire 1 (! ww_result [10] $end
$var wire 1 )! ww_result [9] $end
$var wire 1 *! ww_result [8] $end
$var wire 1 +! ww_result [7] $end
$var wire 1 ,! ww_result [6] $end
$var wire 1 -! ww_result [5] $end
$var wire 1 .! ww_result [4] $end
$var wire 1 /! ww_result [3] $end
$var wire 1 0! ww_result [2] $end
$var wire 1 1! ww_result [1] $end
$var wire 1 2! ww_result [0] $end
$var wire 1 3! ww_overflow $end
$var wire 1 4! \G0:0:ALU1|OPER|Mux0~3_combout\ $end
$var wire 1 5! \G0:0:ALU1|OPER|Mux0~2_combout\ $end
$var wire 1 6! \G0:0:ALU1|OPER|Mux0~4_combout\ $end
$var wire 1 7! \Step0|Mux0~0_combout\ $end
$var wire 1 8! \Step0|Mux1~0_combout\ $end
$var wire 1 9! \Step0|Mux4~0_combout\ $end
$var wire 1 :! \Step0|Mux2~0_combout\ $end
$var wire 1 ;! \G0:0:ALU1|ADDING|Cout~0_combout\ $end
$var wire 1 <! \G0:1:ALU1|OPER|Mux0~1_combout\ $end
$var wire 1 =! \G0:1:ALU1|INVERTING_B|inToInvert~0_combout\ $end
$var wire 1 >! \G0:1:ALU1|OPER|Mux0~0_combout\ $end
$var wire 1 ?! \G0:1:ALU1|OPER|Mux0~2_combout\ $end
$var wire 1 @! \G0:2:ALU1|INVERTING_A|inToInvert~0_combout\ $end
$var wire 1 A! \G0:2:ALU1|INVERTING_B|inToInvert~0_combout\ $end
$var wire 1 B! \G0:1:ALU1|ADDING|Cout~0_combout\ $end
$var wire 1 C! \G0:2:ALU1|XOR2|out1~0_combout\ $end
$var wire 1 D! \G0:2:ALU1|OPER|Mux0~0_combout\ $end
$var wire 1 E! \G0:2:ALU1|OPER|Mux0~1_combout\ $end
$var wire 1 F! \G0:3:ALU1|INVERTING_B|inToInvert~0_combout\ $end
$var wire 1 G! \G0:3:ALU1|OPER|Mux0~0_combout\ $end
$var wire 1 H! \G0:2:ALU1|ADDING|Cout~0_combout\ $end
$var wire 1 I! \G0:3:ALU1|OPER|Mux0~1_combout\ $end
$var wire 1 J! \G0:3:ALU1|OPER|Mux0~2_combout\ $end
$var wire 1 K! \G0:4:ALU1|INVERTING_A|inToInvert~0_combout\ $end
$var wire 1 L! \G0:4:ALU1|XOR2|out1~0_combout\ $end
$var wire 1 M! \G0:3:ALU1|ADDING|Cout~0_combout\ $end
$var wire 1 N! \G0:4:ALU1|OPER|Mux0~0_combout\ $end
$var wire 1 O! \G0:4:ALU1|INVERTING_B|inToInvert~0_combout\ $end
$var wire 1 P! \G0:4:ALU1|OPER|Mux0~1_combout\ $end
$var wire 1 Q! \G0:5:ALU1|OPER|Mux0~0_combout\ $end
$var wire 1 R! \G0:4:ALU1|ADDING|Cout~0_combout\ $end
$var wire 1 S! \G0:5:ALU1|OPER|Mux0~1_combout\ $end
$var wire 1 T! \G0:5:ALU1|INVERTING_B|inToInvert~0_combout\ $end
$var wire 1 U! \G0:5:ALU1|OPER|Mux0~2_combout\ $end
$var wire 1 V! \G0:6:ALU1|INVERTING_B|inToInvert~0_combout\ $end
$var wire 1 W! \G0:6:ALU1|XOR2|out1~0_combout\ $end
$var wire 1 X! \G0:5:ALU1|ADDING|Cout~0_combout\ $end
$var wire 1 Y! \G0:6:ALU1|OPER|Mux0~0_combout\ $end
$var wire 1 Z! \G0:6:ALU1|INVERTING_A|inToInvert~0_combout\ $end
$var wire 1 [! \G0:6:ALU1|OPER|Mux0~1_combout\ $end
$var wire 1 \! \G0:7:ALU1|OPER|Mux0~0_combout\ $end
$var wire 1 ]! \G0:7:ALU1|INVERTING_B|inToInvert~0_combout\ $end
$var wire 1 ^! \G0:6:ALU1|ADDING|Cout~0_combout\ $end
$var wire 1 _! \G0:7:ALU1|OPER|Mux0~1_combout\ $end
$var wire 1 `! \G0:7:ALU1|OPER|Mux0~2_combout\ $end
$var wire 1 a! \G0:8:ALU1|XOR2|out1~0_combout\ $end
$var wire 1 b! \G0:7:ALU1|ADDING|Cout~0_combout\ $end
$var wire 1 c! \G0:8:ALU1|OPER|Mux0~0_combout\ $end
$var wire 1 d! \G0:8:ALU1|INVERTING_A|inToInvert~0_combout\ $end
$var wire 1 e! \G0:8:ALU1|INVERTING_B|inToInvert~0_combout\ $end
$var wire 1 f! \G0:8:ALU1|OPER|Mux0~1_combout\ $end
$var wire 1 g! \G0:9:ALU1|INVERTING_B|inToInvert~0_combout\ $end
$var wire 1 h! \G0:9:ALU1|OPER|Mux0~0_combout\ $end
$var wire 1 i! \G0:8:ALU1|ADDING|Cout~0_combout\ $end
$var wire 1 j! \G0:9:ALU1|OPER|Mux0~1_combout\ $end
$var wire 1 k! \G0:9:ALU1|OPER|Mux0~2_combout\ $end
$var wire 1 l! \G0:9:ALU1|ADDING|Cout~0_combout\ $end
$var wire 1 m! \G0:10:ALU1|XOR2|out1~0_combout\ $end
$var wire 1 n! \G0:10:ALU1|OPER|Mux0~0_combout\ $end
$var wire 1 o! \G0:10:ALU1|INVERTING_A|inToInvert~0_combout\ $end
$var wire 1 p! \G0:10:ALU1|INVERTING_B|inToInvert~0_combout\ $end
$var wire 1 q! \G0:10:ALU1|OPER|Mux0~1_combout\ $end
$var wire 1 r! \G0:11:ALU1|INVERTING_B|inToInvert~0_combout\ $end
$var wire 1 s! \G0:11:ALU1|OPER|Mux0~0_combout\ $end
$var wire 1 t! \G0:10:ALU1|ADDING|Cout~0_combout\ $end
$var wire 1 u! \G0:11:ALU1|OPER|Mux0~1_combout\ $end
$var wire 1 v! \G0:11:ALU1|OPER|Mux0~2_combout\ $end
$var wire 1 w! \G0:12:ALU1|INVERTING_B|inToInvert~0_combout\ $end
$var wire 1 x! \G0:12:ALU1|INVERTING_A|inToInvert~0_combout\ $end
$var wire 1 y! \G0:11:ALU1|ADDING|Cout~0_combout\ $end
$var wire 1 z! \G0:12:ALU1|XOR2|out1~0_combout\ $end
$var wire 1 {! \G0:12:ALU1|OPER|Mux0~0_combout\ $end
$var wire 1 |! \G0:12:ALU1|OPER|Mux0~1_combout\ $end
$var wire 1 }! \G0:13:ALU1|INVERTING_B|inToInvert~0_combout\ $end
$var wire 1 ~! \G0:12:ALU1|ADDING|Cout~0_combout\ $end
$var wire 1 !" \G0:13:ALU1|OPER|Mux0~1_combout\ $end
$var wire 1 "" \G0:13:ALU1|OPER|Mux0~0_combout\ $end
$var wire 1 #" \G0:13:ALU1|OPER|Mux0~2_combout\ $end
$var wire 1 $" \G0:13:ALU1|ADDING|Cout~0_combout\ $end
$var wire 1 %" \G0:14:ALU1|XOR2|out1~0_combout\ $end
$var wire 1 &" \G0:14:ALU1|OPER|Mux0~0_combout\ $end
$var wire 1 '" \G0:14:ALU1|INVERTING_B|inToInvert~0_combout\ $end
$var wire 1 (" \G0:14:ALU1|INVERTING_A|inToInvert~0_combout\ $end
$var wire 1 )" \G0:14:ALU1|OPER|Mux0~1_combout\ $end
$var wire 1 *" \G0:15:ALU1|OPER|Mux0~0_combout\ $end
$var wire 1 +" \G0:15:ALU1|INVERTING_B|inToInvert~0_combout\ $end
$var wire 1 ," \G0:14:ALU1|ADDING|Cout~0_combout\ $end
$var wire 1 -" \G0:15:ALU1|OPER|Mux0~1_combout\ $end
$var wire 1 ." \G0:15:ALU1|OPER|Mux0~2_combout\ $end
$var wire 1 /" \G0:15:ALU1|ADDING|Cout~0_combout\ $end
$var wire 1 0" \overflow~0_combout\ $end
$var wire 1 1" \b~combout\ [15] $end
$var wire 1 2" \b~combout\ [14] $end
$var wire 1 3" \b~combout\ [13] $end
$var wire 1 4" \b~combout\ [12] $end
$var wire 1 5" \b~combout\ [11] $end
$var wire 1 6" \b~combout\ [10] $end
$var wire 1 7" \b~combout\ [9] $end
$var wire 1 8" \b~combout\ [8] $end
$var wire 1 9" \b~combout\ [7] $end
$var wire 1 :" \b~combout\ [6] $end
$var wire 1 ;" \b~combout\ [5] $end
$var wire 1 <" \b~combout\ [4] $end
$var wire 1 =" \b~combout\ [3] $end
$var wire 1 >" \b~combout\ [2] $end
$var wire 1 ?" \b~combout\ [1] $end
$var wire 1 @" \b~combout\ [0] $end
$var wire 1 A" \opcode~combout\ [2] $end
$var wire 1 B" \opcode~combout\ [1] $end
$var wire 1 C" \opcode~combout\ [0] $end
$var wire 1 D" \a~combout\ [15] $end
$var wire 1 E" \a~combout\ [14] $end
$var wire 1 F" \a~combout\ [13] $end
$var wire 1 G" \a~combout\ [12] $end
$var wire 1 H" \a~combout\ [11] $end
$var wire 1 I" \a~combout\ [10] $end
$var wire 1 J" \a~combout\ [9] $end
$var wire 1 K" \a~combout\ [8] $end
$var wire 1 L" \a~combout\ [7] $end
$var wire 1 M" \a~combout\ [6] $end
$var wire 1 N" \a~combout\ [5] $end
$var wire 1 O" \a~combout\ [4] $end
$var wire 1 P" \a~combout\ [3] $end
$var wire 1 Q" \a~combout\ [2] $end
$var wire 1 R" \a~combout\ [1] $end
$var wire 1 S" \a~combout\ [0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1D
0U
1V
xW
1X
1Y
1Z
1[
1\
1]
13!
04!
15!
16!
07!
08!
09!
0:!
0;!
0<!
0=!
0>!
0?!
1@!
1A!
0B!
0C!
0D!
0E!
1F!
1G!
1H!
1I!
1J!
1K!
1L!
1M!
0N!
0O!
0P!
0Q!
1R!
1S!
0T!
1U!
1V!
1W!
0X!
1Y!
0Z!
1[!
0\!
1]!
0^!
0_!
1`!
1a!
0b!
1c!
1d!
0e!
1f!
0g!
1h!
0i!
0j!
1k!
0l!
0m!
0n!
1o!
1p!
0q!
1r!
0s!
1t!
1u!
0v!
0w!
0x!
1y!
0z!
1{!
1|!
1}!
0~!
0!"
1""
0#"
1$"
1%"
0&"
1'"
0("
0)"
0*"
0+"
1,"
1-"
1."
0/"
10"
0!
0"
1#
0$
0%
1&
1'
1(
0)
0*
0+
1,
1-
1.
0/
00
01
12
13
04
15
16
07
08
19
1:
0;
0<
1=
1>
0?
1@
0A
1B
0C
0^
0_
1`
0a
0b
1c
1d
1e
0f
0g
0h
1i
1j
1k
0l
0m
0n
1o
1p
0q
1r
1s
0t
0u
1v
1w
0x
0y
1z
1{
0|
1}
0~
1!!
0"!
1#!
0$!
0%!
1&!
0'!
0(!
1)!
1*!
1+!
1,!
1-!
0.!
1/!
00!
01!
12!
01"
12"
13"
04"
15"
16"
07"
08"
19"
1:"
0;"
0<"
1="
1>"
0?"
1@"
0A"
1B"
0C"
0D"
0E"
1F"
0G"
0H"
1I"
1J"
1K"
0L"
0M"
0N"
1O"
1P"
1Q"
0R"
0S"
1E
0F
0G
1H
0I
0J
1K
1L
1M
1N
1O
0P
1Q
0R
0S
1T
$end
#90000
1C
1"!
1C"
19!
1=!
0A!
0F!
1O!
1T!
0V!
0]!
1e!
1g!
0p!
0r!
1w!
0}!
0'"
1+"
0."
1/"
0,"
1#"
0$"
1~!
1v!
0y!
0t!
0k!
1l!
1i!
0`!
0U!
1X!
0J!
0H!
1?!
1C!
0L!
0W!
0a!
1m!
1z!
0%"
0c!
1N!
1D!
11!
0I!
0M!
0/!
0-!
0+!
1j!
1t!
0)!
0u!
0~!
1'!
1!"
1$"
1%!
0-"
0/"
0#!
1S
0Q
0O
0M
0K
1I
1G
0E
00"
1."
1&"
0#"
0!"
0$"
0v!
1u!
1k!
0N!
1J!
1E!
1P!
0f!
0*!
1.!
10!
1/!
0P!
1)!
1v!
0'!
0&"
1#"
0%!
1)"
1#!
03!
1R
1Q
1P
0L
1K
0I
0G
1E
0D
1$!
1%!
0)"
1'!
0.!
0P
1I
1G
1F
0$!
0F
#180000
